{
  "name": "morphing-card",
  "type": "registry:ui",
  "registryDependencies": [],
  "title": "Morphing Card",
  "author": "Harshit Pant",
  "description": "A morphing card component with customizable content.",
  "dependencies": ["motion"],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "morphing-card.tsx",
      "content": "\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { motion } from \"motion/react\";\r\nimport { PencilLine } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ntype MorphingCardProps = {\r\n  customId: string;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  icon?: React.ComponentType<{ className?: string }>;\r\n  iconClassname?: string;\r\n  title?: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  cancelButtonText?: string;\r\n  confirmButtonText?: string;\r\n  dialogTitle?: React.ReactNode;\r\n  dialogDescription?: React.ReactNode;\r\n  dialogCancelText?: string;\r\n  dialogConfirmText?: string;\r\n  onConfirm?: () => void;\r\n  variant?: \"positive\" | \"negative\" | \"default\";\r\n};\r\n\r\nfunction MorphingCard({\r\n  customId,\r\n  children,\r\n  className,\r\n  icon: Icon = PencilLine,\r\n  iconClassname,\r\n  title,\r\n  description,\r\n  cancelButtonText = \"Cancel\",\r\n  confirmButtonText = \"Create\",\r\n  dialogTitle = \"Confirm Action\",\r\n  dialogDescription = \"Are you sure you want to proceed?\",\r\n  dialogCancelText = \"Cancel\",\r\n  dialogConfirmText = \"Confirm\",\r\n  onConfirm,\r\n  variant = \"default\",\r\n  ...props\r\n}: MorphingCardProps) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleConfirm = () => {\r\n    if (onConfirm) onConfirm();\r\n    setOpen(false);\r\n  };\r\n\r\n  // Set colors based on variant\r\n  const getButtonStyles = () => {\r\n    switch (variant) {\r\n      case \"positive\":\r\n        return \"bg-emerald-600 hover:bg-emerald-700 text-white\";\r\n      case \"negative\":\r\n        return \"bg-rose-600 hover:bg-rose-700 text-white\";\r\n      default:\r\n        return \"bg-blue-600 hover:bg-blue-700 text-white\";\r\n    }\r\n  };\r\n\r\n  const setIconStyles = {\r\n    positive: \" text-emerald-500\",\r\n    negative: \" text-rose-500\",\r\n    default: \" text-blue-500\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <MorphingDialog\r\n          customId={customId}\r\n          setOpen={setOpen}\r\n          Icon={Icon}\r\n          iconClassname={iconClassname}\r\n          title={dialogTitle}\r\n          description={dialogDescription}\r\n          cancelText={dialogCancelText}\r\n          confirmText={dialogConfirmText}\r\n          onConfirm={handleConfirm}\r\n          variant={variant}\r\n        />\r\n      )}\r\n\r\n      <motion.div\r\n        layout\r\n        layoutId={`morphing-card-${customId}`}\r\n        className=\"bg-card text-card-foreground flex h-auto min-h-[150px] w-[300px] flex-col gap-6 rounded-xl border p-6 shadow-sm\"\r\n        {...props}\r\n      >\r\n        <div className=\"flex items-center justify-around gap-x-4\">\r\n          <motion.span layout layoutId={`card-icon-${customId}`}>\r\n            <Icon className={cn(\"h-6 w-6\", setIconStyles[variant], iconClassname)} />\r\n          </motion.span>\r\n          <motion.div\r\n            layout\r\n            layoutId={`card-content-${customId}`}\r\n            className={cn(\"flex-1\", className)}\r\n          >\r\n            {title && <h3 className=\"pl-2 text-lg font-medium\">{title}</h3>}\r\n            {description && (\r\n              <p className=\"text-muted-foreground mt-1 pl-2 text-sm\">{description}</p>\r\n            )}\r\n            {children}\r\n          </motion.div>\r\n        </div>\r\n\r\n        <div className=\"flex w-full justify-end gap-x-3 pt-2\">\r\n          <motion.button\r\n            layout\r\n            layoutId={`cancel-button-${customId}`}\r\n            className=\"cursor-pointer rounded-md bg-zinc-200 px-3 py-1.5 text-sm text-zinc-800 hover:bg-zinc-300\"\r\n          >\r\n            {cancelButtonText}\r\n          </motion.button>\r\n          <motion.button\r\n            layout\r\n            layoutId={`confirm-button-${customId}`}\r\n            className={`cursor-pointer rounded-md px-3 py-1.5 text-sm ${getButtonStyles()}`}\r\n            onClick={() => setOpen(true)}\r\n          >\r\n            {confirmButtonText}\r\n          </motion.button>\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n}\r\n\r\nMorphingCard.displayName = \"MorphingCard\";\r\n\r\ntype MorphingDialogProps = {\r\n  customId: string;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  Icon: React.ComponentType<{ className?: string }>;\r\n  iconClassname?: string;\r\n  title?: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  cancelText?: string;\r\n  confirmText?: string;\r\n  onConfirm?: () => void;\r\n  variant: \"positive\" | \"negative\" | \"default\";\r\n};\r\n\r\nfunction MorphingDialog({\r\n  customId,\r\n  setOpen,\r\n  Icon,\r\n  iconClassname,\r\n  title,\r\n  description,\r\n  cancelText,\r\n  confirmText,\r\n  onConfirm,\r\n  variant,\r\n}: MorphingDialogProps) {\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    if (onConfirm) onConfirm();\r\n    setOpen(false);\r\n  };\r\n\r\n  const setButtonStyles = (variant: MorphingCardProps[\"variant\"]) => {\r\n    switch (variant) {\r\n      case \"positive\":\r\n        return \"bg-emerald-600 hover:bg-emerald-700 text-white\";\r\n      case \"negative\":\r\n        return \"bg-rose-600 hover:bg-rose-700 text-white\";\r\n      default:\r\n        return \"bg-blue-600 hover:bg-blue-700 text-white\";\r\n    }\r\n  };\r\n\r\n  const setIconStyles = {\r\n    positive: \"ring-1 text-emerald-500\",\r\n    negative: \"ring-1 text-rose-500\",\r\n    default: \"ring-1 text-blue-500\",\r\n  } as const;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.3 }}\r\n        className=\"fixed inset-0 z-20 h-screen w-screen bg-black/20 backdrop-blur-sm\"\r\n        onClick={handleCancel}\r\n      />\r\n\r\n      <div className=\"fixed top-1/2 left-1/2 z-30 -translate-x-1/2 -translate-y-1/2\">\r\n        <motion.div\r\n          layoutId={`morphing-card-${customId}`}\r\n          className=\"bg-card text-card-foreground flex h-auto min-h-[200px] w-[300px] flex-col items-center justify-center gap-6 rounded-xl border p-6 shadow-sm\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <motion.span layoutId={`card-icon-${customId}`} className=\"flex justify-center\">\r\n            <Icon\r\n              className={cn(\"h-12 w-12 rounded-full p-2\", setIconStyles[variant], iconClassname)}\r\n            />\r\n          </motion.span>\r\n\r\n          <div className=\"flex flex-col items-center text-center\">\r\n            {title && <motion.h3 className=\"text-lg font-medium\">{title}</motion.h3>}\r\n            <motion.p\r\n              layoutId={`card-content-${customId}`}\r\n              className=\"text-muted-foreground mt-2 text-sm\"\r\n            >\r\n              {description}\r\n            </motion.p>\r\n          </div>\r\n\r\n          <div className=\"flex w-full justify-center gap-x-3 pt-2\">\r\n            <motion.button\r\n              layoutId={`cancel-button-${customId}`}\r\n              className=\"cursor-pointer rounded-md bg-zinc-200 px-3 py-1.5 text-sm text-zinc-800 hover:bg-zinc-300\"\r\n              onClick={handleCancel}\r\n            >\r\n              {cancelText}\r\n            </motion.button>\r\n            <motion.button\r\n              layoutId={`confirm-button-${customId}`}\r\n              className={cn(\r\n                \"cursor-pointer rounded-md px-3 py-1.5 text-sm\",\r\n                setButtonStyles(variant)\r\n              )}\r\n              onClick={handleConfirm}\r\n            >\r\n              {confirmText}\r\n            </motion.button>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nMorphingCard.displayName = \"MorphingCard\";\r\n\r\nexport { MorphingCard, type MorphingCardProps };\r\n\r\n// DevelopedBy: AetherUI\r\n",
      "type": "registry:ui"
    }
  ]
}
