{
  "name": "tilted-carousel",
  "type": "registry:ui",
  "registryDependencies": [],
  "title": "Tilted Carousel",
  "author": "Anmol-TheDev",
  "description": "A visually immersive tilted carousel component with smooth bidirectional animations.",
  "dependencies": [],
  "files": [
    {
      "path": "tilted-carousel.tsx",
      "content": "\"use client\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface TiltedCarouselProps {\n  images: string[];\n  className?: string;\n  rowClassName?: string;\n  imageClassName?: string;\n  speed?: number;\n  rows?: number;\n  multiplier?: number;\n  direction?: \"left\" | \"right\" | \"alternate\";\n  pauseOnHover?: boolean;\n  preset?: \"default\" | \"compact\" | \"spacious\" | \"dramatic\";\n}\n\nconst PRESETS = {\n  default: {\n    className: \"h-[800px]\",\n    rowClassName: \"gap-4\",\n    imageClassName: \"h-64 w-48 rounded-2xl shadow-2xl\",\n  },\n  compact: {\n    className: \"h-[600px]\",\n    rowClassName: \"gap-2\",\n    imageClassName: \"h-48 w-36 rounded-xl shadow-lg\",\n  },\n  spacious: {\n    className: \"h-[1000px]\",\n    rowClassName: \"gap-6\",\n    imageClassName: \"h-80 w-60 rounded-3xl shadow-[0_20px_50px_rgba(0,0,0,0.5)]\",\n  },\n  dramatic: {\n    className: \"h-[900px]\",\n    rowClassName: \"gap-5\",\n    imageClassName: \"h-72 w-52 rounded-2xl shadow-[0_25px_60px_rgba(0,0,0,0.6)]\",\n  },\n};\n\nexport function TiltedCarousel({\n  images,\n  className,\n  rowClassName,\n  imageClassName,\n  speed = 30,\n  rows = 4,\n  multiplier = 6,\n  direction = \"alternate\",\n  pauseOnHover = false,\n  preset = \"default\",\n}: TiltedCarouselProps) {\n  if (!images || !images.length) {\n    return (\n      <div className=\"flex h-[800px] w-full items-center justify-center bg-black\">\n        <p className=\"text-white/50\">No images provided</p>{\" \"}\n      </div>\n    );\n  }\n\n  const presetConfig = PRESETS[preset];\n  const finalClassName = cn(presetConfig.className, className);\n  const finalRowClassName = cn(presetConfig.rowClassName, rowClassName);\n  const finalImageClassName = cn(presetConfig.imageClassName, imageClassName);\n  const duplicatedImages = Array.from({ length: multiplier }, () => images).flat();\n  const imagesPerRow = Math.ceil(duplicatedImages.length / rows);\n  const imageRows = Array.from({ length: rows }, (_, rowIndex) =>\n    duplicatedImages.slice(rowIndex * imagesPerRow, (rowIndex + 1) * imagesPerRow)\n  );\n\n  const getAnimationName = () => {\n    switch (direction) {\n      case \"left\":\n        return \"scroll-left\";\n      case \"right\":\n        return \"scroll-right\";\n      case \"alternate\":\n        return \"scroll-bidirectional\";\n      default:\n        return \"scroll-bidirectional\";\n    }\n  };\n\n  const animationName = getAnimationName();\n\n  return (\n    <div\n      className={cn(\"relative h-screen w-full overflow-hidden bg-black\", finalClassName)}\n      style={{\n        perspective: \"1000px\",\n      }}\n    >\n      <div\n        className=\"absolute inset-0 -top-60 flex flex-col gap-4 py-8\"\n        style={{\n          transform: \"rotateX(25deg) rotateY(-15deg) rotateZ(5deg)\",\n          transformStyle: \"preserve-3d\",\n        }}\n      >\n        {imageRows.map((rowImages, rowIndex) => (\n          <div\n            key={rowIndex}\n            className={cn(\n              \"flex shrink-0\",\n              finalRowClassName,\n              pauseOnHover && \"hover:![animation-play-state:paused]\"\n            )}\n            style={{\n              animation:\n                speed > 0\n                  ? `${animationName} ${speed}s linear infinite ${direction === \"alternate\" ? \"alternate\" : \"\"}`\n                  : \"none\",\n              animationDelay: `${rowIndex * -3}s`,\n            }}\n          >\n            {[...rowImages, ...rowImages].map((image, imageIndex) => (\n              <div\n                key={`${rowIndex}-${imageIndex}`}\n                className={cn(\"relative shrink-0 overflow-hidden\", finalImageClassName)}\n                style={{ transform: \"translateZ(20px)\" }}\n              >\n                <img\n                  src={image}\n                  alt={`Carousel image ${imageIndex + 1}`}\n                  className=\"h-full w-full object-cover\"\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <style jsx>{`\n        @media (prefers-reduced-motion: reduce) {\n          div[class*=\"flex shrink-0\"] {\n            animation: none !important;\n          }\n        }\n\n        @keyframes scroll-left {\n          from {\n            transform: translateX(0);\n          }\n          to {\n            transform: translateX(-50%);\n          }\n        }\n\n        @keyframes scroll-right {\n          from {\n            transform: translateX(-50%);\n          }\n          to {\n            transform: translateX(0);\n          }\n        }\n\n        @keyframes scroll-bidirectional {\n          from {\n            transform: translateX(0);\n          }\n          to {\n            transform: translateX(-50%);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\n// DevelopedBy: AetherUI\n",
      "type": "registry:ui",
      "target": "components/content/tilted-carousel.tsx"
    }
  ]
}
