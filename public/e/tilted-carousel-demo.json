{
  "name": "tilted-carousel-demo",
  "type": "registry:ui",
  "description": "A visually immersive tilted carousel component with smooth bidirectional animations.",
  "componentName": "tilted-carousel-demo",
  "files": [
    {
      "path": "tilted-carousel-demo.tsx",
      "content": "import { TiltedCarousel } from \"@/content/tilted-carousel\";\n\nexport default function () {\nconst images = [\n  \"https://images.unsplash.com/photo-1519681393784-d120267933ba?auto=format&fit=crop&w=800&q=80\",\n  \"https://images.unsplash.com/photo-1525253086316-d0c936c814f8?auto=format&fit=crop&w=800&q=80\",\n  \"https://images.unsplash.com/photo-1756894256833-934a85a42df9?q=80&w=687&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  \"https://images.unsplash.com/photo-1482192505345-5655af888cc4?auto=format&fit=crop&w=800&q=80\",\n  \"https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?auto=format&fit=crop&w=800&q=80\",\n  \"https://images.unsplash.com/photo-1500534623283-312aade485b7?auto=format&fit=crop&w=800&q=80\",\n  \"https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80\",\n  \"https://images.unsplash.com/photo-1755090281929-2f027ee94c98?q=80&w=687&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n];\n\n  return <TiltedCarousel images={images} speed={30} rows={5} />;\n}",
      "type": "registry:component"
    },
    {
      "path": "component/content/tilted-carousel.tsx",
      "content": "\"use client\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TiltedCarouselProps {\n  images: string[]\n  className?: string\n  speed?: number\n  rows?: number\n}\n\nexport function TiltedCarousel({ images, className, speed = 30, rows = 4 }: TiltedCarouselProps) {\n  const duplicatedImages = [...images, ...images, ...images, ...images, ...images, ...images]\n\n  const imagesPerRow = Math.ceil(duplicatedImages.length / rows)\n  const imageRows = Array.from({ length: rows }, (_, rowIndex) =>\n    duplicatedImages.slice(rowIndex * imagesPerRow, (rowIndex + 1) * imagesPerRow),\n  )\n\n  return (\n    <div\n      className={cn(\"relative w-full h-screen overflow-hidden bg-black\", className)}\n      style={{\n        perspective: \"1000px\",\n      }}\n    >\n      <div\n        className=\"absolute inset-0 -top-60 flex flex-col gap-4 py-8\"\n        style={{\n          transform: \"rotateX(25deg) rotateY(-15deg) rotateZ(5deg)\",\n          transformStyle: \"preserve-3d\",\n        }}\n      >\n        {imageRows.map((rowImages, rowIndex) => (\n          <div\n            key={rowIndex}\n            className=\"flex gap-4 shrink-0\"\n            style={{\n              animation: `scroll-bidirectional ${speed}s ease-in-out infinite alternate`,\n              animationDelay: `${rowIndex * -3}s`,\n              transform: rowIndex === 0 || rowIndex === 1 ? 'translateX(-50%)' : 'translateX(0)',\n            }}\n          >\n            {rowImages.map((image, imageIndex) => (\n              <div\n                key={`${rowIndex}-${imageIndex}`}\n                className=\"relative shrink-0 w-48 h-64 rounded-2xl overflow-hidden shadow-2xl\"\n                style={{\n                  transform: \"translateZ(20px)\",\n                }}\n              >\n                <img\n                  src={image || \"/placeholder.svg\"}\n                  alt={`Carousel image ${imageIndex + 1}`}\n                  className=\"w-full h-full object-cover\"\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <style jsx>{`\n        @keyframes scroll-bidirectional {\n          0% {\n            transform: translateX(0);\n          }\n          100% {\n            transform: translateX(-50%);\n          }\n        }\n      `}</style>\n    </div>\n  )\n}",
      "type": "registry:ui"
    }
  ]
}
