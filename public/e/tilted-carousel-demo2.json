{
  "name": "tilted-carousel-demo2",
  "type": "registry:component",
  "description": "A visually immersive tilted carousel component with smooth bidirectional animations.",
  "componentName": "tilted-carousel-demo2",
  "files": [
    {
      "path": "tilted-carousel-demo2.tsx",
      "content": "import { TiltedCarousel } from \"@/components/content/tilted-carousel\";\n\nfunction TiltedCarouselDemo2() {\n  const images = [\n    \"https://images.unsplash.com/photo-1519681393784-d120267933ba?auto=format&fit=crop&w=800&q=80\",\n    \"https://images.unsplash.com/photo-1525253086316-d0c936c814f8?auto=format&fit=crop&w=800&q=80\",\n    \"https://images.unsplash.com/photo-1756894256833-934a85a42df9?q=80&w=687&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n    \"https://images.unsplash.com/photo-1482192505345-5655af888cc4?auto=format&fit=crop&w=800&q=80\",\n    \"https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?auto=format&fit=crop&w=800&q=80\",\n    \"https://images.unsplash.com/photo-1500534623283-312aade485b7?auto=format&fit=crop&w=800&q=80\",\n    \"https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80\",\n    \"https://images.unsplash.com/photo-1755090281929-2f027ee94c98?q=80&w=687&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n  ];\n\n  return (\n    <div className=\"relative h-screen w-screen overflow-hidden\">\n      <div className=\"absolute inset-0 z-0\">\n        <TiltedCarousel images={images} pauseOnHover preset=\"dramatic\" className=\"bg-cyan-200\" />\n        <div className=\"absolute inset-0 z-5 bg-black/50 shadow-[inset_0_0_100px_40px_rgba(0,0,0,0.6)]\" />\n      </div>\n\n      <div className=\"relative z-10 flex h-full w-full items-center justify-center px-6 text-center\">\n        <div className=\"mx-auto max-w-2xl rounded-xl bg-black/30 p-8 shadow-xl backdrop-blur-md md:p-12\">\n          <h1 className=\"font-bricolage-grotesque mb-4 text-4xl text-white drop-shadow-md md:text-5xl\">\n            Aether/<span className=\"text-gradient\">ui</span>\n          </h1>\n          <p className=\"text-lg font-light text-white/90 md:text-xl\">\n            Stunning hero section powered by{\" \"}\n            <span className=\"font-bricolage-grotesque font-medium text-white\">TiltedCarousel</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TiltedCarouselDemo2;\n",
      "type": "registry:component",
      "target": "components/tilted-carousel-demo2.tsx"
    },
    {
      "path": "components/content/tilted-carousel.tsx",
      "content": "\"use client\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface TiltedCarouselProps {\n  images: string[];\n  className?: string;\n  rowClassName?: string;\n  imageClassName?: string;\n  speed?: number;\n  rows?: number;\n  multiplier?: number;\n  direction?: \"left\" | \"right\" | \"alternate\";\n  pauseOnHover?: boolean;\n  preset?: \"default\" | \"compact\" | \"spacious\" | \"dramatic\";\n}\n\nconst PRESETS = {\n  default: {\n    className: \"h-[800px]\",\n    rowClassName: \"gap-4\",\n    imageClassName: \"h-64 w-48 rounded-2xl shadow-2xl\",\n  },\n  compact: {\n    className: \"h-[600px]\",\n    rowClassName: \"gap-2\",\n    imageClassName: \"h-48 w-36 rounded-xl shadow-lg\",\n  },\n  spacious: {\n    className: \"h-[1000px]\",\n    rowClassName: \"gap-6\",\n    imageClassName: \"h-80 w-60 rounded-3xl shadow-[0_20px_50px_rgba(0,0,0,0.5)]\",\n  },\n  dramatic: {\n    className: \"h-[900px]\",\n    rowClassName: \"gap-5\",\n    imageClassName: \"h-72 w-52 rounded-2xl shadow-[0_25px_60px_rgba(0,0,0,0.6)]\",\n  },\n};\n\nexport function TiltedCarousel({\n  images,\n  className,\n  rowClassName,\n  imageClassName,\n  speed = 30,\n  rows = 4,\n  multiplier = 6,\n  direction = \"alternate\",\n  pauseOnHover = false,\n  preset = \"default\",\n}: TiltedCarouselProps) {\n  if (!images || !images.length) {\n    return (\n      <div className=\"flex h-[800px] w-full items-center justify-center bg-black\">\n        <p className=\"text-white/50\">No images provided</p>{\" \"}\n      </div>\n    );\n  }\n\n  const presetConfig = PRESETS[preset];\n  const finalClassName = cn(presetConfig.className, className);\n  const finalRowClassName = cn(presetConfig.rowClassName, rowClassName);\n  const finalImageClassName = cn(presetConfig.imageClassName, imageClassName);\n  const duplicatedImages = Array.from({ length: multiplier }, () => images).flat();\n  const imagesPerRow = Math.ceil(duplicatedImages.length / rows);\n  const imageRows = Array.from({ length: rows }, (_, rowIndex) =>\n    duplicatedImages.slice(rowIndex * imagesPerRow, (rowIndex + 1) * imagesPerRow)\n  );\n\n  const getAnimationName = () => {\n    switch (direction) {\n      case \"left\":\n        return \"scroll-left\";\n      case \"right\":\n        return \"scroll-right\";\n      case \"alternate\":\n        return \"scroll-bidirectional\";\n      default:\n        return \"scroll-bidirectional\";\n    }\n  };\n\n  const animationName = getAnimationName();\n\n  return (\n    <div\n      className={cn(\"relative h-screen w-full overflow-hidden bg-black\", finalClassName)}\n      style={{\n        perspective: \"1000px\",\n      }}\n    >\n      <div\n        className=\"absolute inset-0 -top-60 flex flex-col gap-4 py-8\"\n        style={{\n          transform: \"rotateX(25deg) rotateY(-15deg) rotateZ(5deg)\",\n          transformStyle: \"preserve-3d\",\n        }}\n      >\n        {imageRows.map((rowImages, rowIndex) => (\n          <div\n            key={rowIndex}\n            className={cn(\n              \"flex shrink-0\",\n              finalRowClassName,\n              pauseOnHover && \"hover:![animation-play-state:paused]\"\n            )}\n            style={{\n              animation:\n                speed > 0\n                  ? `${animationName} ${speed}s linear infinite ${direction === \"alternate\" ? \"alternate\" : \"\"}`\n                  : \"none\",\n              animationDelay: `${rowIndex * -3}s`,\n            }}\n          >\n            {[...rowImages, ...rowImages].map((image, imageIndex) => (\n              <div\n                key={`${rowIndex}-${imageIndex}`}\n                className={cn(\"relative shrink-0 overflow-hidden\", finalImageClassName)}\n                style={{ transform: \"translateZ(20px)\" }}\n              >\n                <img\n                  src={image}\n                  alt={`Carousel image ${imageIndex + 1}`}\n                  className=\"h-full w-full object-cover\"\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <style jsx>{`\n        @media (prefers-reduced-motion: reduce) {\n          div[class*=\"flex shrink-0\"] {\n            animation: none !important;\n          }\n        }\n\n        @keyframes scroll-left {\n          from {\n            transform: translateX(0);\n          }\n          to {\n            transform: translateX(-50%);\n          }\n        }\n\n        @keyframes scroll-right {\n          from {\n            transform: translateX(-50%);\n          }\n          to {\n            transform: translateX(0);\n          }\n        }\n\n        @keyframes scroll-bidirectional {\n          from {\n            transform: translateX(0);\n          }\n          to {\n            transform: translateX(-50%);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\n// DevelopedBy: AetherUI\n",
      "type": "registry:ui",
      "target": "components/content/tilted-carousel.tsx"
    }
  ]
}
