{
  "name": "hover-card-demo-2",
  "type": "registry:ui",
  "description": "A Esthetic hover card component with a glowing effect on the edges.",
  "componentName": "hover-card-demo-2",
  "files": [
    {
      "path": "hover-card-demo-2.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { HoverArea, HoverCard } from \"@/content/hover-card\";\r\nimport { Rocket, Server, Trophy, Users, Lock } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport React from \"react\";\r\n\r\nconst HoverCardDemo2 = () => {\r\n  return (\r\n    <HoverArea className=\"my-6\">\r\n      <HoverCard className=\"rounded-xl\" color=\"orange\">\r\n        <div className=\"h-[400px] w-[300px] rounded-xl bg-slate-100 p-4 shadow-lg dark:bg-zinc-900/90\">\r\n          <Image\r\n            className=\"rounded-t-xl object-cover\"\r\n            src=\"https://loremflickr.com/320/240\"\r\n            alt=\"Card image\"\r\n            height={150}\r\n            width={300}\r\n          />\r\n\r\n          <div className=\"mt-4\">\r\n            <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white\">Hey Kitty</h3>\r\n            <p className=\"mt-2 text-gray-600 dark:text-gray-300\">\r\n              Kitty is so chill, because she uses Aether UI. Are you using it?\r\n            </p>\r\n            <div className=\"mt-4 flex items-center justify-between\">\r\n              <span className=\"text-sm font-semibold text-gray-500 dark:text-gray-400\">\r\n                April 2, 2025\r\n              </span>\r\n              <button className=\"rounded-lg bg-orange-500 px-3.5 py-1.5 text-sm text-white dark:bg-orange-700 dark:hover:bg-orange-600\">\r\n                Learn More\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HoverCard>\r\n    </HoverArea>\r\n  );\r\n};\r\n\r\nexport default HoverCardDemo2;\r\n",
      "type": "registry:component"
    },
    {
      "path": "component/content/hover-card.tsx",
      "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, { CSSProperties, useEffect, useRef } from \"react\";\r\n\r\ninterface HoverAreaProps extends React.ComponentPropsWithoutRef<\"div\"> {\r\n  children: React.ReactNode;\r\n  size?: number;\r\n}\r\n\r\ntype HoverCardProps = {\r\n  color?: string;\r\n  className?: string;\r\n} & React.ComponentPropsWithoutRef<\"div\">;\r\n\r\nfunction HoverArea({ children, className, size = 300, ...props }: HoverAreaProps) {\r\n  const elem = useRef<HTMLDivElement>(null);\r\n  const currFrameId = useRef<number | null>(null);\r\n  const currCoordinates = useRef<{ x: number; y: number } | null>(null);\r\n\r\n  /**\r\n   * Update the position before the next browser paint in sync with render cycle.\r\n   */\r\n  function updateFramePosition() {\r\n    if (currCoordinates.current && elem.current) {\r\n      const { x, y } = currCoordinates.current;\r\n      elem.current.style.setProperty(\"--glow-x\", `${x}px`);\r\n      elem.current.style.setProperty(\"--glow-y\", `${y}px`);\r\n    }\r\n\r\n    currFrameId.current = null;\r\n  }\r\n\r\n  function handleMouseMove(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    const boundingClientRect = elem.current?.getBoundingClientRect();\r\n    if (!boundingClientRect) return;\r\n\r\n    currCoordinates.current = {\r\n      x: e.clientX - boundingClientRect.left,\r\n      y: e.clientY - boundingClientRect.top,\r\n    };\r\n\r\n    if (!currFrameId.current) {\r\n      currFrameId.current = requestAnimationFrame(updateFramePosition);\r\n    }\r\n  }\r\n\r\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    if (elem.current) {\r\n      elem.current.style.removeProperty(\"--glow-x\");\r\n      elem.current.style.removeProperty(\"--glow-y\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={\r\n        {\r\n          position: \"relative\",\r\n          \"--glow-size\": `${size}px`,\r\n        } as CSSProperties\r\n      }\r\n      ref={elem}\r\n      className={cn(className)}\r\n      {...props}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction HoverCard({ color = \"blue\", className, children, ...props }: HoverCardProps) {\r\n  const element = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const ele = element.current;\r\n    if (ele && ele?.style) {\r\n      ele.style.setProperty(\"--glow-top\", `${ele.offsetTop}px`);\r\n      ele.style.setProperty(\"--glow-left\", `${ele.offsetLeft}px`);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={element} className={cn(className, \"relative\")}>\r\n      <div\r\n        style={{\r\n          backgroundImage: `radial-gradient(\r\n            var(--glow-size) var(--glow-size) at calc(var(--glow-x, -99999px) - var(--glow-left, 0px))\r\n            calc(var(--glow-y, -99999px) - var(--glow-top, 0px)),\r\n            ${color} 0%,\r\n            transparent 100%  \r\n          )`,\r\n        }}\r\n        className={cn(\r\n          \"after:bg-background/90 pointer-events-none absolute inset-0 mix-blend-multiply after:absolute after:inset-0.25 after:rounded-[inherit] after:content-[''] dark:mix-blend-lighten\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { HoverCard, HoverArea };\r\n\r\nHoverCard.displayName = \"HoverCard\";\r\nHoverArea.displayName = \"HoverArea\";\r\n\r\n// DevelopedBy: AetherUI\r\n",
      "type": "registry:ui"
    }
  ]
}
